name: "Development Build"
on: push
 
jobs:

  S3:
    name: Deploy
   
    runs-on: ubuntu-latest
    environment:
      name: Development

    steps:
      - uses: actions/checkout@master
      - name: Create S3 (aws s3 mb s3://latest-test-our-fita)
        run: |
          aws s3 ls s3://latest-test-our-fita
          echo $GITHUB_WORKSPACE

          
          
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: 'us-west-2'
      
 
      - name: Deploy in EC2 (Install Docker)
        env:
          PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY  }}
                 
          HOST_NAME : ${{ vars.DNS_ADDR }}
       #   HOST_NAME : ec2-34-219-74-168.us-west-2.compute.amazonaws.com 
         # HOST_NAME : ec2-54-185-19-93.us-west-2.compute.amazonaws.com 
          USER_NAME : ${{ vars.USER_NAME}}
        run: |
           echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
           ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOST_NAME} "
           for pkg in docker.io docker-doc docker-compose docker-compose-v2 podman-docker containerd runc; do sudo apt-get remove $pkg; done &      
           curl -fsSL https://get.docker.com -o get-docker.sh &
           sudo sh ./get-docker.sh --dry-run &
           docker -v"
          
              
   
           
      - name: Deploy in EC2 (Install Docker)2
        env:
          PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY  }}
                 
          HOST_NAME : ${{ vars.DNS_ADDR }}
         # HOST_NAME : ec2-34-219-74-168.us-west-2.compute.amazonaws.com 
         # HOST_NAME : ec2-54-185-19-93.us-west-2.compute.amazonaws.com 
          USER_NAME : ${{ vars.USER_NAME}}
        run: |
           echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
           ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOST_NAME} "
                
            sudo apt-get update&
            sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin"           

      - name: Deploy in EC2 (Install petclinic from hub)
        env:
          PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY  }}
                 
          HOST_NAME : ${{ vars.DNS_ADDR }}
         # HOST_NAME : ec2-34-219-74-168.us-west-2.compute.amazonaws.com 
         # HOST_NAME : ec2-54-185-19-93.us-west-2.compute.amazonaws.com 
          USER_NAME : ${{ vars.USER_NAME}}
        run: |
           echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
           ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOST_NAME} "
               
            docker -v&
            docker ps&
            docker pull vasiliskovs/petclinic:5.3.22&
            docker run -p 80:8080 -d vasiliskovs/petclinic:5.3.22  &
            docker ps"

   
            
  Testssssss:  
      
        
        runs-on: ubuntu-latest
        steps:
         
         - name: Check http status code of production site
           env :
               #HOST_NAME : ${{ vars.DNS_ADDR }}
               # HOST_NAME : ec2-34-219-74-168.us-west-2.compute.amazonaws.com 
             HOST_NAME : ${{ vars.DNS_ADDR }}
           uses: lakuapik/gh-actions-http-status@v1
           with:
            sites: '[ "http://ec2-34-219-74-168.us-west-2.compute.amazonaws.com"]'
            expected: '[ 200]'

  Copy_file:         
    runs-on: ubuntu-latest
    env:
          PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY  }}
                 
     
          HOST_NAME : ${{ vars.DNS_ADDR }}
          USER_NAME : ${{ vars.USER_NAME}}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install AWS CLI
      run: |
        echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
           ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOST_NAME} "
           sudo apt-get update&
           sudo apt-get install -y awscli"

    - name: Copy to S3
      env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: 'us-west-2'
          PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY  }}
          HOST_NAME : ${{ vars.DNS_ADDR }}
          USER_NAME : ${{ vars.USER_NAME}}

      run: |
        echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
           ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOST_NAME} "        
           sudo docker save petclinic:5.3.22 | gzip > myimage_latest.tar.gz&
           sudo aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID&
           sudo aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY&
           sudo aws configure set default.region $AWS_DEFAULT_REGION&
           sudo aws s3 cp myimage_latest.tar.gz s3://latest-test-our-fita --region us-west-2"

           
  Petclinic_deploy:         
   runs-on: ubuntu-latest 
   steps:

   - name: Deploy to Staging server
     uses: easingthemes/ssh-deploy@main
     with:
      SSH_PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY  }}
      SOURCE: "images/"
      REMOTE_HOST: ${{ vars.DNS_ADDR }}
      REMOTE_USER: ${{ vars.USER_NAME}}
   #   TARGET: ${{ secrets.REMOTE_TARGET }}
  
   - name: Deploy Docker
     env:
          
          PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY  }}
          HOST_NAME : ${{ vars.DNS_ADDR }}
          USER_NAME : ${{ vars.USER_NAME}}

     run: |
        echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
           ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOST_NAME} "        
           ls"    
